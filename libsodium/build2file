./ : lib{sodium} ./tests/

int_libs = # Interface dependencies.
imp_libs = # Implementation dependencies.
#import imp_libs += libhello%lib{hello}

include_dir = origin/src/libsodium/include

./ : lib{sodium}
lib{sodium}: origin/src/libsodium/{h c}{crypto_*/**}  $include_dir/h{**}
lib{sodium}: origin/src/sodium/c{**} origin/src/libsodium/sodium/c{**}
lib{sodium}: origin/src/libsodium/randombytes/c{*} origin/src/libsodium/randombytes/salsa20/c{**}
lib{sodium}: origin/src/libsodium/include/sodium/h{version}
lib{sodium}: $imp_libs $int_libs

# From the makefile # TODO: support nativeclient (or decide not to support it)
#if NATIVECLIENT
#libsodium_la_SOURCES += \
#  lib{sodium}: origin/src/libsodium/randombytes/nativeclient/c{randombytes_nativeclient}
#else
#libsodium_la_SOURCES += \
  lib{sodium}: origin/src/libsodium/randombytes/sysrandom/c{randombytes_sysrandom}
#endif


# Include the generated version header into the distribution (so that we don't
# pick up an installed one) and don't remove it when cleaning in src (so that
# clean results in a state identical to distributed).
origin/src/libsodium/include/sodium/h{version} : in{origin/builds/msvc/version.h} $src_root/manifest # just copy the one in msvc
{
  dist  = true
  clean = ($src_root != $out_root)
}

# Build options.
#

if ($c.target.class != 'windows')
{
  c.coptions += -fPIC
  c.poptions += -DCONFIGURED # See configure.ac in upstream repo.

}
else
{
  if($c != 'msvc')
  {
    info "Compiling with non-MSVC on Windows"
    c.poptions +=   -mavx -mavx2  -maes -mpclmul # -mssse3 -msse4.1 -msse2 -msse3 -mmmx -mrdrnd # -mavx512f   # See configure.ac in upstream repo.
  }
}


c.poptions =+ "-I$out_base/$include_dir/sodium" "-I$out_base/$include_dir"
c.poptions =+ "-I$src_base/$include_dir/sodium" "-I$src_base/$include_dir"

obja{*}: c.poptions += -DSODIUM_STATIC
objs{*}: c.poptions += -DSODIUM_DLL_EXPORT

# Export options.
#
user_export = "-I$out_base/$include_dir" "-I$src_base/$include_dir" "-I$src_base/$include_dir/sodium"
# for export : $user_export
#  info "export : $export "

lib{sodium}:
{
  cc.export.poptions = $user_export
  cc.export.libs = $int_libs
}

liba{sodium}: cc.export.poptions += -DSODIUM_STATIC
# libs{sodium}: cc.export.poptions += -DSODIUM_EXPORT

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version. See the version module
# for details on the version.* variable values.
#
if $version.pre_release
  lib{sodium}: bin.lib.version = @"-$version.project_id"
else
  lib{sodium}: bin.lib.version = @"-$version.major.$version.minor"

# Install into the libsodium/ subdirectory of, say, /usr/include/
# recreating subdirectories.
#

origin/src/libsodium/h{**}:
{
  install = false
}

origin/src/libsodium/include/h{**}:
{
  install         = include/
  install.subdirs = true
}

origin/builds/msvc/h{*} :
{
  install         = include/sodium/
  install.subdirs = false
}

