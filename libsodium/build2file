int_libs = # Interface dependencies.
imp_libs = # Implementation dependencies.
#import imp_libs += libhello%lib{hello}

lib{sodium}: {h c}{** -version} h{version} $imp_libs $int_libs

# Include the generated version header into the distribution (so that we don't
# pick up an installed one) and don't remove it when cleaning in src (so that
# clean results in a state identical to distributed).
#
h{version}: in{version} $src_root/manifest
h{version}:
{
  dist  = true
  clean = ($src_root != $out_root)
}

# Build options.
#
c.poptions =+ "-I$out_root" "-I$src_root"

obja{*}: c.poptions += -DLIBSODIUM_STATIC_BUILD
objs{*}: c.poptions += -DLIBSODIUM_SHARED_BUILD

# Export options.
#
lib{sodium}:
{
  c.export.poptions = "-I$out_root" "-I$src_root"
  c.export.libs = $int_libs
}

liba{sodium}: c.export.poptions += -DLIBSODIUM_STATIC
libs{sodium}: c.export.poptions += -DLIBSODIUM_SHARED

# For pre-releases use the complete version to make sure they cannot be used
# in place of another pre-release or the final version. See the version module
# for details on the version.* variable values.
#
if $version.pre_release
  lib{sodium}: bin.lib.version = @"-$version.project_id"
else
  lib{sodium}: bin.lib.version = @"-$version.major.$version.minor"

# Install into the libsodium/ subdirectory of, say, /usr/include/
# recreating subdirectories.
#
{h}{*}:
{
  install         = include/libsodium/
  install.subdirs = true
}
